package business;

import javafx.fxml.FXML;

import javafx.scene.control.Button;
import LogicStructures.LogicEdgeList;
import LogicStructures.LogicRoadList;
import LogicStructures.LogicVerticesList;
import Nodes.NodeV;
import Nodes.NodeVertex;
import Structures.EdgeList;
import Structures.Graph;
import Structures.RoadList;
import Structures.VerticesList;
import domain.Car;
import domain.GraphRoad;
import domain.Incident;
import domain.Road;
import domain.RoadLister;
import domain.RoadsGrid;
import javafx.event.ActionEvent;

import javafx.scene.control.Spinner;
import javafx.scene.control.SpinnerValueFactory;
import javafx.scene.control.TableView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;

public class MainController {
	@FXML
	private Pane pGrid;
	@FXML
	private Pane pData;
	@FXML
	private Spinner<Integer> sSize;
	@FXML
	private TableView<Incident> tVIncidents;
	@FXML
	private TableView<Road> tVCongestedRoads;
	@FXML
	private Button bEvent;
	@FXML
	private Button bGenerateCar;
	@FXML
	private Button bShowGraph;
	@FXML
	private Button bRoads;

	private GridPane grid;

	@FXML
	private void initialize() {
		/*
		 * EstablecerÃ© un limite de 5 por un tema de espacio en la ventana
		 */
		sSize.setValueFactory(new SpinnerValueFactory.IntegerSpinnerValueFactory(3, 5, 3));
		sSize.valueProperty().addListener((o, v, n) -> draw());
		draw();
	}

	private void draw() {
		int a = sSize.getValue();
		GridPane g = RoadsGrid.generateGrid(a);
		grid = g;

		g.prefWidthProperty().bind(pGrid.widthProperty());
		g.prefHeightProperty().bind(pGrid.heightProperty());
		g.maxWidthProperty().bind(pGrid.widthProperty());
		g.maxHeightProperty().bind(pGrid.heightProperty());

		pGrid.getChildren().setAll(g);
	}

	// Event Listener on Button[#bEvent].onAction
	@FXML
	public void toChooseEvent(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#bGenerateCar].onAction
	@FXML
	public void toAddCar(ActionEvent event) {
                if (grid != null) {
                        try {
                                Car car = new Car(grid, sSize.getValue(), GraphRoad.getGraph());

				Thread carThread = new Thread(car);
				carThread.setDaemon(true);
				carThread.start();

			} catch (Exception e) {
				System.err.println("Error in car: " + e.getMessage());
				e.printStackTrace();
			}
		}
	}

	// Event Listener on Button[#bShowGraph].onAction
	@FXML
	public void toShowGraphInfoInConsole(ActionEvent event) {
		GraphRoad.displayGraph();

	}// Event Listener on Button[#bRoads].onAction

	@FXML
	public void toShowRoads(ActionEvent event) {
		Graph graph = GraphRoad.getGraph();
		RoadLister.print(graph);
	}
}
